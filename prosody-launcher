#!/bin/bash
# GUI launcher for Prosody that handles first-run setup

FIRST_RUN_FLAG="$HOME/.config/prosody/.first_run_complete"
VENV_DIR="$HOME/.local/share/prosody/venv"
LOG_FILE="$HOME/.config/prosody/prosody.log"

# Create directories
mkdir -p "$HOME/.config/prosody"
mkdir -p "$HOME/.local/share/prosody"

# Redirect output to log file
exec >> "$LOG_FILE" 2>&1

# If first run, show notification and install dependencies
if [ ! -f "$FIRST_RUN_FLAG" ]; then
    notify-send -i audio-input-microphone "Prosody Setup" "First run detected. Installing dependencies (this may take a few minutes)..." -t 10000
    
    # Create virtual environment
    python3 -m venv "$VENV_DIR"
    
    # Install dependencies
    "$VENV_DIR/bin/pip" install --upgrade pip wheel
    "$VENV_DIR/bin/pip" install numpy sounddevice pynput openai-whisper torch torchaudio --extra-index-url https://download.pytorch.org/whl/cpu
    
    # Create first run flag
    touch "$FIRST_RUN_FLAG"
    
    notify-send -i audio-input-microphone "Prosody Setup" "Setup complete! Starting Prosody..." -t 5000
fi

# Enable systemd service for auto-start
systemctl --user daemon-reload 2>/dev/null || true
systemctl --user enable prosody.service 2>/dev/null || true

# Run Prosody
if [ -f "$VENV_DIR/bin/python" ]; then
    exec "$VENV_DIR/bin/python" -m prosody "$@"
else
    exec python3 -m prosody "$@"
fi